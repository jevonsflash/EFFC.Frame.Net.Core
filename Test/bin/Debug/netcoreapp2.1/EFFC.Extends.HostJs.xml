<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EFFC.Extends.HostJs</name>
    </assembly>
    <members>
        <member name="T:EFFC.Extends.HostJs.BaseHostJsObject">
            <summary>
            Host Js的扩展对象
            可用于获取扩展对象的反射结构
            </summary>
        </member>
        <member name="P:EFFC.Extends.HostJs.BaseHostJsObject.Description">
            <summary>
            对象作用描述
            </summary>
        </member>
        <member name="P:EFFC.Extends.HostJs.BaseHostJsObject.Name">
            <summary>
            对象名称,作为hostjs中对象的访问名称
            </summary>
        </member>
        <member name="P:EFFC.Extends.HostJs.BaseHostJsObject.Properties">
            <summary>
            获取属性
            </summary>
        </member>
        <member name="P:EFFC.Extends.HostJs.BaseHostJsObject.Functions">
            <summary>
            获取所有方法的定义
            </summary>
        </member>
        <member name="P:EFFC.Extends.HostJs.BaseHostJsObject.ConstructorDesc">
            <summary>
            获取整个对象结构的描述
            </summary>
        </member>
        <member name="T:EFFC.Extends.HostJs.HostJs">
            <summary>
            HostJs的基类
            </summary>
        </member>
        <member name="P:EFFC.Extends.HostJs.HostJs.DefaultEngineName">
            <summary>
            默认的引擎名称为:VRoomJs,Chakra，默认为Chakra
            </summary>
        </member>
        <member name="M:EFFC.Extends.HostJs.HostJs.NewInstance(System.String)">
            <summary>
            通过反射获取指定的Js引擎
            </summary>
            <param name="typeName">参数为:VRoomJs,Chakra，默认为Chakra</param>
            <returns></returns>
        </member>
        <member name="M:EFFC.Extends.HostJs.HostJs.NewInstance``1">
            <summary>
            通过反射获取指定的Js引擎
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:EFFC.Extends.HostJs.HostJs.Dispose">
            <summary>
            资源释放，垃圾回收
            </summary>
        </member>
        <member name="M:EFFC.Extends.HostJs.HostJs.Evaluate(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            执行js，并返回结果
            </summary>
            <param name="script"></param>
            <param name="kvp"></param>
            <returns></returns>
        </member>
        <member name="M:EFFC.Extends.HostJs.HostJs.Excute(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            执行js，不返回结果
            </summary>
            <param name="script"></param>
            <param name="kvp"></param>
        </member>
        <member name="M:EFFC.Extends.HostJs.HostJs.GetOutObject(System.String)">
            <summary>
            获取当前js环境中的变量对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EFFC.Extends.HostJs.HostJs.IsDisposed">
            <summary>
            是否已经释放
            </summary>
            <returns></returns>
        </member>
        <member name="M:EFFC.Extends.HostJs.HostJs.Release">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="P:EFFC.Extends.HostJs.HostJs.ReserveKeys">
            <summary>
            Js的保留关键字
            </summary>
        </member>
        <member name="T:EFFC.Extends.HostJs.HostJsObject.HostJsLockObejctEntity">
            <summary>
            给hostjs使用的代码锁资源
            </summary>
        </member>
        <member name="P:EFFC.Extends.HostJs.HostJsObject.HostJsLockObejctEntity.CurrentWorkArea">
            <summary>
            当前作用区域
            </summary>
        </member>
        <member name="M:EFFC.Extends.HostJs.HostJsObject.HostJsLockObejctEntity.Lock(System.String)">
            <summary>
            根据lock名称锁定一个对象
            </summary>
            <param name="itemname"></param>
        </member>
        <member name="M:EFFC.Extends.HostJs.HostJsObject.HostJsLockObejctEntity.Free(System.String)">
            <summary>
            释放指定名称的锁
            </summary>
            <param name="itemname"></param>
        </member>
        <member name="P:EFFC.Extends.HostJs.HostJsObject.HostJsLockObejctEntity.LockItem.State">
            <summary>
            对象的状态
            </summary>
        </member>
        <member name="P:EFFC.Extends.HostJs.HostJsObject.HostJsLockObejctEntity.LockItem.Name">
            <summary>
            对象的名称
            </summary>
        </member>
        <member name="T:EFFC.Extends.HostJs.JsSwitcher">
            <summary>
            Js引擎切换器
            </summary>
        </member>
        <member name="M:EFFC.Extends.HostJs.JsSwitcher.#ctor">
            <summary>
            默认使用chakra引擎
            </summary>
        </member>
        <member name="M:EFFC.Extends.HostJs.JsSwitcher.#ctor(System.String)">
            <summary>
            初始化一个js引擎转换器，默认使用chakra引擎，
            chakra：该引擎在windows和ubuntu上都可以良好运行，edeg的内核引擎
            VRoomJs：该引擎可以在windows上良好运行，使用v8引擎
            </summary>
            <param name="name"></param>
        </member>
    </members>
</doc>
